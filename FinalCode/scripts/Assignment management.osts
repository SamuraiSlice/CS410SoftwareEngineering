{"version":"0.3.0","body":"//@Author Kavitha Sridhar\nfunction main(workbook: ExcelScript.Workbook, emailID: string) {\n\t// Get the worksheet and protection key\n\tlet inputSheet = workbook.getWorksheet(\"input\");\n\tlet key = \"20242024\";\n\tlet options: ExcelScript.WorksheetProtectionOptions = {\n\t\tallowEditObjects: true,    // Allows editing of objects like charts, shapes, etc.\n\t\tallowFormatCells: true,    // Allows formatting cells\n\t\tallowInsertRows: true,     // Allows inserting rows\n\t\tallowDeleteRows: true,     // Allows deleting rows\n\t\tallowInsertColumns: true,  // Allows inserting columns\n\t\tallowDeleteColumns: true,  // Allows deleting columns\n\t\tallowAutoFilter: true      // Allows using autofilter\n\t};\n\n\tlet mainoptions: ExcelScript.WorksheetProtectionOptions = {\n\t\tallowEditObjects: true    // Allows editing of objects like charts, shapes, etc.\n\t};\n\n\t// Unprotect the inputSheet if it's protected\n\tlet protection = inputSheet.getProtection();\n\tif (protection.getProtected()) {\n\t\tprotection.unprotect(key);\n\t//\tconsole.log(\"Input sheet unprotected.\");\n\t}\n\n\t// Get the table by name\n\tlet table = inputSheet.getTable(\"InputValues\");\n\n\t// Clear any existing filters\n\ttable.getAutoFilter().clearCriteria();\n\t//console.log(\"Cleared existing filters.\");\n\n\t// Apply the custom filter for the 'Email ID' column\n\ttable.getColumnByName(\"Email ID\").getFilter().applyCustomFilter(emailID);\n\t//console.log(`Applied filter to 'Email ID' with value: ${emailID}`);\n\n\t// Retrieve all filtered table data\n\tlet filteredRows = table.getRangeBetweenHeaderAndTotal().getValues();\n\tlet values = filteredRows.filter(row => row[table.getColumnByName(\"Email ID\").getIndex()] === emailID);\n\t//console.log(`Number of rows with Email ID '${emailID}': ${values.length}`);\n\n\t// Reapply protection to the input sheet after modifications\n\tprotection.protect(options, key);\n\t//console.log(\"Input sheet reprotected.\");\n\n\t// Start Date and End Date logic\n\tlet startDateValue = new Date(Math.round((values[0][1] - 25569) * 86400 * 1000));\n\tlet endDateValue = new Date(Math.round((values[0][2] - 25569) * 86400 * 1000));\n\n\t// Get the current date and time\n\tlet currentDate = new Date();\n\tlet paragraphName = values[0][3];\n\tlet rangeValue = values[0][4];\n\tlet emailIDValue = values[0][5];\n\tlet textboxID = values[0][6];\n\n\t//console.log(\"Checking date and email match...\");\n\tlet isDateInRange = currentDate >= startDateValue && currentDate <= endDateValue;\n\tlet isEmailMatch = emailID === emailIDValue;\n\n\t// Proceed if both date and email match\n\tif (isDateInRange && isEmailMatch) {\n\t\t//console.log(\"The current date and time is within the range, and the email matches.\");\n\n\t\tlet bReportSheet = workbook.getWorksheet(\"Business Report\");\n\t\tconst sheetProtection = bReportSheet.getProtection();\n\n\t\t// Ensure that the Business Report sheet is unprotected before making changes\n\t\tif (sheetProtection.getProtected()) {\n\t\t\ttry {\n\t\t\t\tbReportSheet.getProtection().unprotect(key || \"\");\n\t\t\t\t//console.log(\"Business Report sheet unprotected.\");\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"Failed to unprotect Business Report sheet. Please check the password.\");\n\t\t\t}\n\t\t}\n\n\t\t// Unlock all cells first\n\t\tbReportSheet.getRange().getFormat().getProtection().setLocked(false); // Unlock all cells\n\t\t// Remove permissions given to other students\n\t\tconst editRanges = sheetProtection.getAllowEditRanges();\n\t\t//console.log(`Total AllowEditRanges: ${editRanges.length}`);\n\n\t\t// Loop through each AllowEditRange and remove them\n\t\teditRanges.forEach(range => {\n\t\t\tbReportSheet.getRange(range.getAddress()).getFormat().getFill().setColor(\"#D3D3D3\");\n\t\t\trange.delete();\n\t\t});\n\n\t\t// Unlock the specific cell (ensure that only one cell is unlocked, and others are locked)\n\t\tif (paragraphName && rangeValue) {\n\t\t\tconst cell = bReportSheet.getRange(rangeValue);\n\t\t\tcell.getFormat().getFill().setColor(\"#ADD8E6\");  // Set the background color to light blue\n\t\t\tsheetProtection.addAllowEditRange(paragraphName, rangeValue);\n\t\t\t//console.log(`Unlocked cell: ${rangeValue}`);\n\t\t}\n\n\t\t// Lock all cells first\n\t\tbReportSheet.getRange().getFormat().getProtection().setLocked(true); // Lock all cells\n\n\t\t\n\t\t// Reapply protection to the Business Report sheet with updated options\n\t\ttry {\n\t\t\tsheetProtection.protect(mainoptions, key);\n\t\t\t//console.log(\"Business Report sheet reprotected.\");\n\t\t} catch (error) {\n\t\t\t//console.error(\"Failed to reapply protection to the Business Report sheet:\", error);\n\t\t}\n\n\t\t// Check if protection is applied successfully\n\t\tlet protectionStatus = bReportSheet.getProtection().getProtected();\n\t\tconsole.log(\"Protection status of Business Report sheet:\", protectionStatus);\n\t} else if (!isEmailMatch) {\n\t\tconsole.log(\"The current email does not match the expected email.\");\n\t} else if (!isDateInRange) {\n\t\tconsole.log(\"The current date and time is outside the range.\");\n\t}\n}\n","description":"","noCodeMetadata":"","parameterInfo":"{\"version\":1,\"originalParameterOrder\":[{\"name\":\"emailID\",\"index\":0}],\"parameterSchema\":{\"type\":\"object\",\"required\":[\"emailID\"],\"properties\":{\"emailID\":{\"type\":\"string\"}}},\"returnSchema\":{\"type\":\"object\",\"properties\":{}},\"signature\":{\"comment\":\"\",\"parameters\":[{\"name\":\"workbook\",\"comment\":\"\"},{\"name\":\"emailID\",\"comment\":\"\"}]}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}